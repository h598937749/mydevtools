# Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.

group.names.mysoft=明源云
# new entity检查
inspection.platform.entity.create.display.name=实体创建实例规范检查
inspection.platform.entity.create.problem.descriptor=创建实体实例应通过EntityFactory.create，不能通过new创建
inspection.platform.entity.create.use.quickfix=快速修复EntityFactory.create创建实例
inspection.platform.service.create.problem.descriptor=标记为@Service或@Component的Bean不应该通过new创建

inspection.platform.service.appservice.display.name=AppService规范检查
inspection.platform.service.appservice.problem.notfoundserviceannotation.descriptor=AppService规范检查：非abstract类必须增加@Service注解
inspection.platform.service.appservice.problem.name.descriptor=AppService规范检查：命名需要以AppService结尾
inspection.platform.service.appservice.addservice.quickfix=增加@Service注解

inspection.platform.service.domainservice.display.name=DomainService规范检查
inspection.platform.service.domainservice.problem.notfoundserviceannotation.descriptor=ApDomainService规范检查：非abstract类必须增加@Service注解
inspection.platform.service.domainservice.problem.name.descriptor=DomainService规范检查：命名需要以AppService结尾
inspection.platform.service.domainservice.addservice.quickfix=增加@Service注解

inspection.platform.service.controller.display.name=Controller规范检查
inspection.platform.service.controller.problem.tagannotation.descriptor=Controller规范检查:缺少Tag注解
inspection.platform.service.controller.problem.tagnameattr.descriptor=Controller规范检查:Tag注解缺少name属性
inspection.platform.service.controller.problem.tagnameempty.descriptor=Controller规范检查:Tag注解name属性未赋值
inspection.platform.service.controller.problem.name.descriptor=Controller规范检查:命名需要以Controller结尾
inspection.platform.service.controller.addannotation.tag.quickfix=增加Tag注解
inspection.platform.service.controller.problem.pubservice.annotation.descriptor=Controller规范检查:缺少PubService注解
inspection.platform.service.controller.problem.pubservice.valueattr.descriptor=Controller规范检查:PubService注解缺少value属性
inspection.platform.service.controller.problem.pubservice.valueempty.descriptor=Controller规范检查:PubService注解value属性未赋值
inspection.platform.service.controller.problem.pubservice.prefixempty.descriptor=Controller规范检查:PubService注解缺少prefix属性
inspection.platform.service.controller.problem.pubservice.businesscode.descriptor=Controller规范检查:PubService注解缺少businessCode属性
inspection.platform.service.controller.problem.pubservice.businesscodeempty.descriptor=Controller规范检查:PubService注解businessCode属性未赋值
inspection.platform.service.controller.problem.pubservice.unique.descriptor=Controller规范检查:value + businessCode并非全局唯一
inspection.platform.service.controller.addannotation.pubservice.quickfix=增加PubService注解
inspection.platform.service.controller.problem.pubservice.keyword.descriptor=Controller规范检查:参数名称不能为{0}和平台关键字冲突
inspection.platform.service.controller.problem.pubservice.pubaction.descriptor=Controller规范检查:缺少PubAction注解
inspection.platform.service.controller.problem.pubservice.pubaction.valueattr.descriptor=Controller规范检查:PubAction注解缺少value属性
inspection.platform.service.controller.problem.pubservice.pubaction.valueempty.descriptor=Controller规范检查:PubAction注解value属性值为空
inspection.platform.service.controller.problem.pubservice.pubaction.unique.descriptor=Controller规范检查:PubAction注解value属性值在当前类中并非唯一
inspection.platform.service.controller.problem.pubservice.pubaction.return.descriptor=Controller规范检查:BaseEntity子类不可直接返回到客户端请改用EntityDTO，防止大小写问题
inspection.platform.service.controller.addannotation.pubaction.quickfix=增加PubAction注解
inspection.platform.service.dao.display.name=Dao规范检查
inspection.platform.service.dao.problem.descriptor=
inspection.platform.service.dao.use.quickfix=
inspection.platform.service.entity.display.name=Entity规范检查
inspection.platform.service.entity.problem.lacktablename.descriptor=Entity规范检查：缺少@TableName注解
inspection.platform.service.entity.problem.lacktablevalue.descriptor=Entity规范检查：@TableName注解缺少value属性
inspection.platform.service.entity.problem.notableid.descriptor=Entity规范检查：缺少@TableId注解
inspection.platform.service.entity.problem.moretableid.descriptor=Entity规范检查：@TableId注解个数不为1（含继承）
inspection.platform.service.entity.problem.abstract.descriptor=Entity规范检查：不应为抽象类（abstract）
inspection.platform.service.entity.addtablename.quickfix=增加@TableName注解
inspection.platform.service.entity.removeabstract.quickfix=删除abstract
inspection.platform.service.resource.display.name=Resource注解规范检查
inspection.platform.service.resource.problem.descriptor=Resource注解规范检查：该字段不应该使用Resource、Autowired注解
inspection.platform.service.resource.name.problem.descriptor=Resource注解规范检查：字段命名不规范
inspection.platform.service.resource.use.quickfix_remove=移除@Resource、Autowired注解
inspection.platform.service.resource.use.quickfix_rename=重命名字段为{0}
inspection.platform.enum.display.name=Enum规范检查
inspection.platform.enum.class.problem.descriptor=Enum规范检查：class不能使用@EnumOption注解
inspection.platform.enum.enum.problem.descriptor=Enum规范检查：实现EnumFieldInterface接口且有@EnumOption注解不应为class
inspection.platform.enum.interface.problem.descriptor=Enum规范检查：非枚举实现EnumFieldInterface接口
inspection.platform.enum.nointerface.problem.descriptor=Enum规范检查：枚举需要实现EnumFieldInterface接口
inspection.platform.enum.noioption.problem.descriptor=Enum规范检查：缺少@EnumOption注解
inspection.platform.enum.removeoption.quickfix=移除@EnumOption注解
inspection.platform.enum.addinterface.quickfix=实现EnumFieldInterface接口
inspection.platform.enum.addoption.quickfix=增加@EnumOption注解
inspection.platform.service.addwhite.quickfix=将此类设为白名单不检查
